#!/usr/bin/env bash
# shellcheck disable=SC2120

# Setting up some colors for helping read the demo output.
# Comment out any of the below to turn off that color.
bold=$(tput bold)
cyan=$(tput setaf 6)
reset=$(tput sgr0)
export qm_quadlet=/etc/containers/systemd/qm.container
export rootfs=/usr/lib/qm/rootfs

read_color() {
    read -r -p "${bold}$1${reset}"
}

exec_color() {
    echo -n "
${bold}$ $1${reset}"
    read -r
    bash -c "$1"
}

echo_color() {
    echo "${cyan}$1${reset}"
}

check_command() {
    required_cmds=(sudo podman dnf)
    for required_cmd in "${required_cmds[@]}"; do
        if ! command -v "${required_cmd}" &> /dev/null
        then
            echo "${1} command could not be found. Install ${1} to continue."
            exit 1
        fi
    done
}

init() {
    check_command
    sudo systemctl stop qm > /dev/null
    sudo podman rm qm --force -t 0 > /dev/null
    sudo podman volume rm --force qmEtc qmVar > /dev/null
    sudo podman --root /var/lib/shared rmi -i ubi9 > /dev/null
    sudo rm -rf /usr/lib/qm > /dev/null
    test -s ${qm_quadlet}.orig && sudo mv ${qm_quadlet}.orig ${qm_quadlet}
}

install() {
    echo_color "Installing packages"
    exec_color "sudo dnf -y install qm hirte hirte-agent hirte-ctl podman container-selinux; sudo dnf -y update qm hirte hirte-agent hirte-ctl podman container-selinux"
    clear
}

setup() {
    echo_color "Executing setup"
    echo_color "Enable hirte on the host system"
    exec_color "sudo systemctl start hirte hirte-agent"
    echo
    echo_color "Install and setup /usr/lib/qm/rootfs"
    exec_color "sudo /usr/share/qm/setup"
    read -r
    clear
}

status() {
    exec_color "sudo systemctl status qm.service"
    clear
}

cpuweight() {
    sudo systemctl set-property --runtime QM.slice CPUWeight=50
    sudo systemctl set-property --runtime qm.service CPUWeight=50
    exec_color "sudo cat /sys/fs/cgroup/QM.slice/cpu.weight"
    exec_color "sudo cat /sys/fs/cgroup/QM.slice/qm.service/cpu.weight"
    exec_color "sudo systemctl set-property --runtime QM.slice CPUWeight=10"
    exec_color "sudo cat /sys/fs/cgroup/QM.slice/cpu.weight"
    exec_color "sudo cat /sys/fs/cgroup/QM.slice/qm.service/cpu.weight"
    read -r
}

podman_ctr() {
    clear
    exec_color "sudo podman exec -ti qm ps -eZ"
    exec_color "sudo podman exec qm id | grep --color qm_t"
    exec_color "sudo podman exec qm podman run alpine echo hi"
    exec_color "sudo podman run ubi9 echo hi"
    exec_color "sudo podman exec qm podman images"
    exec_color "sudo podman images"
    exec_color "sudo podman exec qm podman run --userns=auto alpine cat /proc/self/uid_map"
    exec_color "sudo podman exec qm podman run --userns=auto alpine cat /proc/self/uid_map"
    exec_color "sudo podman exec qm podman run --userns=auto alpine cat /proc/self/uid_map"
    exec_color "sudo podman run --userns=auto ubi9 cat /proc/self/uid_map"
    exec_color "sudo podman run --userns=auto ubi9 cat /proc/self/uid_map"
}

hirte() {
    clear
    exec_color "sudo hirtectl list-units | grep --color running"
    exec_color "sudo podman exec -ti qm podman pull ubi8/httpd-24"
    exec_color "echo \"[Container]
Image=registry.access.redhat.com/ubi8/httpd-24
Network=host
\" > /tmp/myquadlet.container"

    exec_color "sudo podman cp /tmp/myquadlet.container qm:/etc/containers/systemd/"
    exec_color "sudo podman exec qm systemctl daemon-reload"
    exec_color "sudo hirtectl restart qm.fedora myquadlet.service"
    exec_color "sudo hirtectl list-units | grep --color myquadlet"
    exec_color "curl 127.0.0.1:8080"
    exec_color "sudo hirtectl stop qm.fedora myquadlet.service"
    exec_color "sudo hirtectl list-units | grep --color myquadlet"
}

additional_store() {
    test -s ${qm_quadlet}.orig || sudo cp ${qm_quadlet} ${qm_quadlet}.orig
    exec_color "sudo podman --root /var/lib/shared pull ubi9"
    exec_color "sudo podman --root /var/lib/shared images | grep -A 10 -B 10 --color ubi9"
    exec_color "sudo podman exec qm podman images | grep -A 10 -B 10 --color ubi9"
    exec_color  "sudo sed -i -e '\$aVolume=/var/lib/shared:/var/lib/shared:ro' /etc/containers/systemd/qm.container"
    exec_color "sudo systemctl daemon-reload"
    exec_color "sudo systemctl restart qm.service"
    exec_color "sudo podman exec qm podman images | grep -A 10 -B 10 --color ubi9"
}

asilservice() {
    exec_color "grep -A 20 -B 20 --color system_u.*s0 asilservice"
    exec_color "sudo python asilservice &"
    exec_color "sudo systemctl stop qm"
    sudo -u root "podman volume rm --force qmEtc qmVar > /dev/null"
    exec_color "sudo dnf -y install --installroot ${rootfs} nmap-ncat --nogpgcheck"
    exec_color "sudo restorecon -R ${rootfs}"
    exec_color  "sudo sed -i -e '\$aVolume=/run/asilservice:/run/asilservice' /etc/containers/systemd/qm.container"
    exec_color "sudo systemctl daemon-reload"
    exec_color "sudo systemctl restart qm"
    exec_color "sudo podman exec -ti qm /usr/bin/nc -U /run/asilservice/asilservice.sock"
}

init

install

setup

status

cpuweight

podman_ctr

hirte

additional_store

asilservice

echo "Demo is done"

read -r
