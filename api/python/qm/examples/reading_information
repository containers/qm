#!/usr/bin/env python
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
Module for managing QM containers and checking service status.

This script demonstrates the usage of the QM class to start, stop,
and check the status of Podman containers, as well as verify the
installation and running state of the QM service.
"""

from qm import QM


def main():
    """
    Demonstrate QM container and service management operations.

    The main function initializes a QM instance and performs the following:
    - Starts a container named 'qm'.
    - Checks the container's status.
    - Counts the number of running containers.
    - Stops the container.
    - Verifies if the QM service is installed.
    - Verifies if the QM service is running.
    """
    # Initialize the QM class
    qm_manager = QM()

    # Example: Start a container named 'qm'
    container_name = "qm"
    if qm_manager.start_container(container_name):
        print(f"Container '{container_name}' started successfully.")
    else:
        print(f"Failed to start container '{container_name}'.")

    # Example: Check the status of the container
    status = qm_manager.container_status(container_name)
    print(f"Status of container {status}")

    # Example: Count the number of running containers
    running_count = qm_manager.count_running_containers()
    print(f"Number of running containers: {running_count}")

    # Example: Stop the container
    if qm_manager.stop_container(container_name):
        print(f"Container '{container_name}' stopped successfully.")
    else:
        print(f"Failed to stop container '{container_name}'.")

    # Example: Check if the QM service is installed
    if qm_manager.is_qm_service_installed():
        print("QM service is installed.")
    else:
        print("QM service is not installed.")

    # Example: Check if the QM service is running
    if qm_manager.is_qm_service_running():
        print("QM service is running.")
    else:
        print("QM service is not running.")


if __name__ == "__main__":
    main()
